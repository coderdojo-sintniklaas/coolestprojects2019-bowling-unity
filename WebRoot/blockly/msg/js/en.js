// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.en');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Add Comment";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Change value:";
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";
Blockly.Msg.CLEAN_UP = "Clean up Blocks";
Blockly.Msg.COLLAPSE_ALL = "Collapse Blocks";
Blockly.Msg.COLLAPSE_BLOCK = "Collapse Block";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colour 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colour 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "blend";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blends two colours together with a given ratio (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choose a colour from the palette.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "random colour";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choose a colour at random.";
Blockly.Msg.COLOUR_RGB_BLUE = "blue";
Blockly.Msg.COLOUR_RGB_GREEN = "green";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "red";
Blockly.Msg.COLOUR_RGB_TITLE = "colour with";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "break out of loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continue with next iteration of loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Break out of the containing loop.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Skip the rest of this loop, and continue with the next iteration.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warning: This block may only be used within a loop.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "for each item %1 in list %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For each item in a list, set the variable '%1' to the item, and then do some statements.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg.CONTROLS_FOR_TITLE = "count with %1 from %2 to %3 by %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Add a condition to the if block.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Add a final, catch-all condition to the if block.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Add, remove, or reorder sections to reconfigure this if block.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "else";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "else if";
Blockly.Msg.CONTROLS_IF_MSG_IF = "if";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "If a value is true, then do some statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "do";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repeat %1 times";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Do some statements several times.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repeat until";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repeat while";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "While a value is false, then do some statements.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "While a value is true, then do some statements.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Delete all %1 blocks?";
Blockly.Msg.DELETE_BLOCK = "Delete Block";
Blockly.Msg.DELETE_X_BLOCKS = "Delete %1 Blocks";
Blockly.Msg.DEPRECATEDBLOCK = "This block is outdated and will be removed from Vubbi.";
Blockly.Msg.DISABLE_BLOCK = "Disable Block";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicate";
Blockly.Msg.ENABLE_BLOCK = "Enable Block";
Blockly.Msg.EXPAND_ALL = "Expand Blocks";
Blockly.Msg.EXPAND_BLOCK = "Expand Block";
Blockly.Msg.EXTERNAL_INPUTS = "External Inputs";
Blockly.Msg.HELP = "Help";
Blockly.Msg.INLINE_INPUTS = "Inline Inputs";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "create empty list";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returns a list, of length 0, containing no data records";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "list";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "create list with";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Add an item to the list.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Create a list with any number of items.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "first";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# from end";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "get";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";
Blockly.Msg.LISTS_GET_INDEX_LAST = "last";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remove";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returns the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returns the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Removes and returns the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Removes and returns the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Removes the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Removes the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list. Returns 0 if item is not found.";
Blockly.Msg.LISTS_INLIST = "in list";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";
Blockly.Msg.LISTS_SET_INDEX_SET = "set";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returns either true or false.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "true";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false. Returns false if the input is true.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";
Blockly.Msg.LOGIC_OPERATION_AND = "and";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg.LOGIC_OPERATION_OR = "or";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "change %1 by %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";
Blockly.Msg.ME = "Me";
Blockly.Msg.MENU_SAVE = "save";
Blockly.Msg.MENU_ZOOM = "zoom";
Blockly.Msg.MENU_ZOOM_IN = "zoom in";
Blockly.Msg.MENU_ZOOM_OUT = "zoom out";
Blockly.Msg.MENU_ZOOM_RESET = "reset zoom";
Blockly.Msg.NEW_VARIABLE = "New variable...";
Blockly.Msg.NEW_VARIABLE_TITLE = "New variable name:";
Blockly.Msg.NEW_VARIABLE_TYPED = "make new %1 memory item";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "with:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "with:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "doSomething";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, remove, or reorder inputs to this function.";
Blockly.Msg.PROCEDURES_TITLE = "' procedure";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Error: This block may be used only within the '";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Error: This block may be used only within a loop which declares ";
Blockly.Msg.REDO = "Redo";
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";
Blockly.Msg.RENAME_VARIABLE = "Rename variable...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_APPEND_TO = "to";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
Blockly.Msg.TEXT_APPEND_TO_VARNAME_DEFAULT = "text";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of the first text in the second text. Returns 0 if text is not found.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg.TEXT_PRINT_TITLE = "print %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides of";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side of";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side of";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";
Blockly.Msg.TODAY = "Today";
Blockly.Msg.TOOLBOX_ACTION = "Action";
Blockly.Msg.TOOLBOX_COLOUR = "Colours";
Blockly.Msg.TOOLBOX_COMMUNICATION = "Messages";
Blockly.Msg.TOOLBOX_CONTENT_COMPARE_TAG_EXAMPLE_TAG = "enemy";
Blockly.Msg.TOOLBOX_CONTENT_FIND_TAG_EXAMPLE_TAG = "scorekeeper";
Blockly.Msg.TOOLBOX_CONTENT_LOG_THIS_WORKS = "This works!";
Blockly.Msg.TOOLBOX_CONTENT_SCENE_TO = "gameover";
Blockly.Msg.TOOLBOX_CONTROL = "Logic";
Blockly.Msg.TOOLBOX_DECISION = "Decisions";
Blockly.Msg.TOOLBOX_DETECT = "Detect";
Blockly.Msg.TOOLBOX_DISPLAY = "Display";
Blockly.Msg.TOOLBOX_DRIVE = "Drive";
Blockly.Msg.TOOLBOX_EVENTS = "Events";
Blockly.Msg.TOOLBOX_LIGHT = "Lights";
Blockly.Msg.TOOLBOX_LIST = "Lists";
Blockly.Msg.TOOLBOX_LOOP = "Loops";
Blockly.Msg.TOOLBOX_MATH = "Numbers";
Blockly.Msg.TOOLBOX_MATH_GROUP = "Math";
Blockly.Msg.TOOLBOX_MORE = "More blocks";
Blockly.Msg.TOOLBOX_MOVE = "Movement";
Blockly.Msg.TOOLBOX_OBJECTS = "Objects";
Blockly.Msg.TOOLBOX_OTHER = "Other...";
Blockly.Msg.TOOLBOX_PROCEDURE = "Functions";
Blockly.Msg.TOOLBOX_ROTATE = "Rotations";
Blockly.Msg.TOOLBOX_SENSOR = "Sensors";
Blockly.Msg.TOOLBOX_SOUND = "Sounds";
Blockly.Msg.TOOLBOX_TEXT = "Text";
Blockly.Msg.TOOLBOX_TIME = "Time";
Blockly.Msg.TOOLBOX_VARIABLE = "Memory";
Blockly.Msg.TOOLBOX_VECTOR = "Coordinates and directions";
Blockly.Msg.TOOLBOX_WAIT = "Wait";
Blockly.Msg.UI_BLOCKS_HEADER = "Blocks";
Blockly.Msg.UI_GENERATED_CODE = "generated code";
Blockly.Msg.UI_LOAD = "Loading...";
Blockly.Msg.UI_LOAD_FAILURE = "Oops! Something went wrong while loading the file...";
Blockly.Msg.UI_NAME_FILE_MSG = "Please enter a name.";
Blockly.Msg.UI_SAVE = "Saving...";
Blockly.Msg.UI_SAVE_FAILURE = "Oops! Something went wrong while saving the file...";
Blockly.Msg.UI_UNNAMED_FILE = "unnamed file";
Blockly.Msg.UNDO = "Undo";
Blockly.Msg.UNITY_CODE_BLOCK_DEFAULT_CODE = "print({QUOTE}Hello World C# code!{QUOTE});";
Blockly.Msg.UNITY_CODE_BLOCK_DEFAULT_NAME = "my action";
Blockly.Msg.UNITY_CODE_BLOCK_TITLE = "new block";
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_ENTER = "just";
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_EXIT = "no longer";
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_STAY = "still";
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_OBJ = "the object I collided with";
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_OBJ_DEFNAME = "collidedObject";
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_SPEED = "the speed I collided with";
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_SPEED_DEFNAME = "collisionSpeed";
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_VECTOR = "the speed I collided with";
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_VECTOR_DEFNAME = "collisionVector";
Blockly.Msg.UNITY_EVENTS_COLLIDE_TITLE_1 = "when I";
Blockly.Msg.UNITY_EVENTS_COLLIDE_TITLE_2 = "hit something";
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_PARAM_OBJ = "the object on the other side of the joint";
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_PARAM_OBJ_DEFNAME = "otherSideObject";
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_TITLE = "when a joint breaks";
Blockly.Msg.UNITY_EVENTS_MESSAGE_DEFAULT = "do something";
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_ARG_TITLE_1 = "when I receive message";
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_ARG_TITLE_2 = "with information";
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_TITLE_1 = "when I receive message";
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_TITLE_2 = "";
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_1 = "send message";
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_2 = "to";
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_3 = "with information";
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_REQUIRE_RECEIVER = "require someone listening";
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_TITLE_1 = "send message";
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_TITLE_2 = "to";
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_DOWN = "starts a click";
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_STAY = "is still pressed down";
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_UP = "is released";
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_TITLE_1 = "when a mouse button";
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_TITLE_2 = "on me";
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_ENTER = "just started";
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_EXIT = "is no longer";
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_STAY = "is still";
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_TITLE_1 = "when the mouse";
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_TITLE_2 = "hovering over me";
Blockly.Msg.UNITY_EVENTS_START_TITLE = "when I start";
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_ENTER = "just entered";
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_EXIT = "just exited";
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_STAY = "is still in";
Blockly.Msg.UNITY_EVENTS_TRIGGER_PARAM_OBJ = "the other object";
Blockly.Msg.UNITY_EVENTS_TRIGGER_PARAM_OBJ_DEFNAME = "otherObject";
Blockly.Msg.UNITY_EVENTS_TRIGGER_TITLE_1 = "when something";
Blockly.Msg.UNITY_EVENTS_TRIGGER_TITLE_2 = "my trigger area";
Blockly.Msg.UNITY_EVENTS_UPDATE_TITLE = "repeat every frame";
Blockly.Msg.UNITY_GENERATED_CODE_WARNING = "DO NOT CHANGE THIS FILE!#The code in this file is automatically generated!#Changes to the code will be overwritten when the file is resaved again from inside Vubbi.";
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_DOWN = "just pressed down";
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_STAY = "still pressed down";
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_UP = "just released";
Blockly.Msg.UNITY_INPUT_GETKEY_TITLE_1 = "button";
Blockly.Msg.UNITY_INPUT_GETKEY_TITLE_2 = "";
Blockly.Msg.UNITY_KEYCODE_Alpha0 = "alphanumeric keyboard 0";
Blockly.Msg.UNITY_KEYCODE_Alpha1 = "alphanumeric keyboard 1";
Blockly.Msg.UNITY_KEYCODE_Alpha2 = "alphanumeric keyboard 2";
Blockly.Msg.UNITY_KEYCODE_Alpha3 = "alphanumeric keyboard 3";
Blockly.Msg.UNITY_KEYCODE_Alpha4 = "alphanumeric keyboard 4";
Blockly.Msg.UNITY_KEYCODE_Alpha5 = "alphanumeric keyboard 5";
Blockly.Msg.UNITY_KEYCODE_Alpha6 = "alphanumeric keyboard 6";
Blockly.Msg.UNITY_KEYCODE_Alpha7 = "alphanumeric keyboard 7";
Blockly.Msg.UNITY_KEYCODE_Alpha8 = "alphanumeric keyboard 8";
Blockly.Msg.UNITY_KEYCODE_Alpha9 = "alphanumeric keyboard 9";
Blockly.Msg.UNITY_KEYCODE_AltGr = "alt Gr key";
Blockly.Msg.UNITY_KEYCODE_Ampersand = "ampersand key '&'";
Blockly.Msg.UNITY_KEYCODE_Asterisk = "asterisk key '*'";
Blockly.Msg.UNITY_KEYCODE_At = "at key '@'";
Blockly.Msg.UNITY_KEYCODE_BackQuote = "back quote key ";
Blockly.Msg.UNITY_KEYCODE_Backslash = "backslash key '\'";
Blockly.Msg.UNITY_KEYCODE_Backspace = "backspace";
Blockly.Msg.UNITY_KEYCODE_Break = "break key";
Blockly.Msg.UNITY_KEYCODE_CapsLock = "capslock key";
Blockly.Msg.UNITY_KEYCODE_Caret = "caret key '^'";
Blockly.Msg.UNITY_KEYCODE_Clear = "'clear'";
Blockly.Msg.UNITY_KEYCODE_Colon = "colon ':' key";
Blockly.Msg.UNITY_KEYCODE_Comma = "comma ',' key";
Blockly.Msg.UNITY_KEYCODE_Delete = "delete";
Blockly.Msg.UNITY_KEYCODE_Dollar = "dollar sign key '$'";
Blockly.Msg.UNITY_KEYCODE_DoubleQuote = "double quote '''";
Blockly.Msg.UNITY_KEYCODE_DownArrow = "arrow key down";
Blockly.Msg.UNITY_KEYCODE_End = "'end'";
Blockly.Msg.UNITY_KEYCODE_Equals = "equals '=' key";
Blockly.Msg.UNITY_KEYCODE_Escape = "escape";
Blockly.Msg.UNITY_KEYCODE_Exclaim = "exclamation mark '!'";
Blockly.Msg.UNITY_KEYCODE_F1 = "F1";
Blockly.Msg.UNITY_KEYCODE_F10 = "F10";
Blockly.Msg.UNITY_KEYCODE_F11 = "F11";
Blockly.Msg.UNITY_KEYCODE_F12 = "F12";
Blockly.Msg.UNITY_KEYCODE_F13 = "F13";
Blockly.Msg.UNITY_KEYCODE_F14 = "F14";
Blockly.Msg.UNITY_KEYCODE_F15 = "F15";
Blockly.Msg.UNITY_KEYCODE_F2 = "F2";
Blockly.Msg.UNITY_KEYCODE_F3 = "F3";
Blockly.Msg.UNITY_KEYCODE_F4 = "F4";
Blockly.Msg.UNITY_KEYCODE_F5 = "F5";
Blockly.Msg.UNITY_KEYCODE_F6 = "F6";
Blockly.Msg.UNITY_KEYCODE_F7 = "F7";
Blockly.Msg.UNITY_KEYCODE_F8 = "F8";
Blockly.Msg.UNITY_KEYCODE_F9 = "F9";
Blockly.Msg.UNITY_KEYCODE_Greater = "greater than '>' key";
Blockly.Msg.UNITY_KEYCODE_Hash = "hash key '#'";
Blockly.Msg.UNITY_KEYCODE_Help = "help key";
Blockly.Msg.UNITY_KEYCODE_Home = "'home'";
Blockly.Msg.UNITY_KEYCODE_Insert = "'insert'";
Blockly.Msg.UNITY_KEYCODE_Keypad0 = "numeric keyboard 0";
Blockly.Msg.UNITY_KEYCODE_Keypad1 = "numeric keyboard 1";
Blockly.Msg.UNITY_KEYCODE_Keypad2 = "numeric keyboard 2";
Blockly.Msg.UNITY_KEYCODE_Keypad3 = "numeric keyboard 3";
Blockly.Msg.UNITY_KEYCODE_Keypad4 = "numeric keyboard 4";
Blockly.Msg.UNITY_KEYCODE_Keypad5 = "numeric keyboard 5";
Blockly.Msg.UNITY_KEYCODE_Keypad6 = "numeric keyboard 6";
Blockly.Msg.UNITY_KEYCODE_Keypad7 = "numeric keyboard 7";
Blockly.Msg.UNITY_KEYCODE_Keypad8 = "numeric keyboard 8";
Blockly.Msg.UNITY_KEYCODE_Keypad9 = "numeric keyboard 9";
Blockly.Msg.UNITY_KEYCODE_KeypadDivide = "numeric keyboard '/'";
Blockly.Msg.UNITY_KEYCODE_KeypadEnter = "numeric keyboard enter";
Blockly.Msg.UNITY_KEYCODE_KeypadEquals = "numeric keyboard '='";
Blockly.Msg.UNITY_KEYCODE_KeypadMinus = "numeric keyboard '-'";
Blockly.Msg.UNITY_KEYCODE_KeypadMultiply = "numeric keyboard '*'";
Blockly.Msg.UNITY_KEYCODE_KeypadPeriod = "numeric keyboard '.'";
Blockly.Msg.UNITY_KEYCODE_KeypadPlus = "numeric keyboard '+'";
Blockly.Msg.UNITY_KEYCODE_LeftAlt = "left Alt key";
Blockly.Msg.UNITY_KEYCODE_LeftApple = "left Command key";
Blockly.Msg.UNITY_KEYCODE_LeftArrow = "arrow key left";
Blockly.Msg.UNITY_KEYCODE_LeftBracket = "left square bracket key '['";
Blockly.Msg.UNITY_KEYCODE_LeftCommand = "left Command key";
Blockly.Msg.UNITY_KEYCODE_LeftControl = "left Control key";
Blockly.Msg.UNITY_KEYCODE_LeftParen = "left Parenthesis key '('";
Blockly.Msg.UNITY_KEYCODE_LeftShift = "left shift key";
Blockly.Msg.UNITY_KEYCODE_LeftWindows = "left Windows key";
Blockly.Msg.UNITY_KEYCODE_Less = "less than '<' key";
Blockly.Msg.UNITY_KEYCODE_Menu = "menu key";
Blockly.Msg.UNITY_KEYCODE_Minus = "minus '-' key";
Blockly.Msg.UNITY_KEYCODE_Mouse0 = "first (primary) mouse button";
Blockly.Msg.UNITY_KEYCODE_Mouse1 = "second (secondary) mouse button";
Blockly.Msg.UNITY_KEYCODE_Mouse2 = "third mouse button";
Blockly.Msg.UNITY_KEYCODE_Numlock = "numlock key";
Blockly.Msg.UNITY_KEYCODE_PageDown = "'page down'";
Blockly.Msg.UNITY_KEYCODE_PageUp = "'page up'";
Blockly.Msg.UNITY_KEYCODE_Pause = "'pause' (PC)";
Blockly.Msg.UNITY_KEYCODE_Period = "period '.' key";
Blockly.Msg.UNITY_KEYCODE_Plus = "plus key '+'";
Blockly.Msg.UNITY_KEYCODE_Print = "print key";
Blockly.Msg.UNITY_KEYCODE_Question = "question mark '?' key";
Blockly.Msg.UNITY_KEYCODE_Quote = "quote key '";
Blockly.Msg.UNITY_KEYCODE_Return = "enter";
Blockly.Msg.UNITY_KEYCODE_RightAlt = "right Alt key";
Blockly.Msg.UNITY_KEYCODE_RightApple = "right Command key";
Blockly.Msg.UNITY_KEYCODE_RightArrow = "arrow key right";
Blockly.Msg.UNITY_KEYCODE_RightBracket = "right square bracket key ']'";
Blockly.Msg.UNITY_KEYCODE_RightCommand = "right Command key";
Blockly.Msg.UNITY_KEYCODE_RightControl = "right Control key";
Blockly.Msg.UNITY_KEYCODE_RightParen = "right Parenthesis key ')'";
Blockly.Msg.UNITY_KEYCODE_RightShift = "right shift key";
Blockly.Msg.UNITY_KEYCODE_RightWindows = "right Windows key";
Blockly.Msg.UNITY_KEYCODE_ScrollLock = "scroll lock key";
Blockly.Msg.UNITY_KEYCODE_Semicolon = "semicolon ';' key";
Blockly.Msg.UNITY_KEYCODE_Slash = "slash '/' key";
Blockly.Msg.UNITY_KEYCODE_Space = "space";
Blockly.Msg.UNITY_KEYCODE_SysReq = "sys req key";
Blockly.Msg.UNITY_KEYCODE_Tab = "tab";
Blockly.Msg.UNITY_KEYCODE_Underscore = "underscore '_' key";
Blockly.Msg.UNITY_KEYCODE_UpArrow = "arrow key up";
Blockly.Msg.UNITY_LOG_TITLE = "print";
Blockly.Msg.UNITY_MEMORY_TITLE = "memory";
Blockly.Msg.UNITY_MEMORY_TOOLTIP = "The memory of this script.";
Blockly.Msg.UNITY_OBJECTS_CREATE_AND_GET_TITLE = "make clone of";
Blockly.Msg.UNITY_OBJECTS_CREATE_TITLE = "make clone of";
Blockly.Msg.UNITY_OBJECTS_DESTROY_TITLE = "destroy";
Blockly.Msg.UNITY_OBJECTS_FIND_TAG_DEFAULT_TAG = "scorekeeper";
Blockly.Msg.UNITY_OBJECTS_FIND_TAG_TITLE = "find GameObject with tag";
Blockly.Msg.UNITY_OBJECTS_TAG_COMPARE_TITLE_1 = "tag of";
Blockly.Msg.UNITY_OBJECTS_TAG_COMPARE_TITLE_2 = "is";
Blockly.Msg.UNITY_OBJECTS_TAG_OF_TITLE = "tag of";
Blockly.Msg.UNITY_PARAMOUTPUT_EXECUTE_TITLE = "and do";
Blockly.Msg.UNITY_PARAMOUTPUT_TITLE_1 = "remember";
Blockly.Msg.UNITY_PARAMOUTPUT_TITLE_2 = "in";
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_SET_TITLE_1 = "set velocity (°/s) of dyn. rigidbody of";
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_SET_TITLE_2 = "to";
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_TITLE = "angular velocity (°/s) of";
Blockly.Msg.UNITY_PHYSICS_PUSH_TITLE_1 = "push";
Blockly.Msg.UNITY_PHYSICS_PUSH_TITLE_2 = "with force";
Blockly.Msg.UNITY_PHYSICS_TORQUE_TITLE_1 = "apply to";
Blockly.Msg.UNITY_PHYSICS_TORQUE_TITLE_2 = "a rotational force of";
Blockly.Msg.UNITY_PHYSICS_VELOCITY_SET_TITLE_1 = "set velocity (unit/s) of dyn. rigidbody of";
Blockly.Msg.UNITY_PHYSICS_VELOCITY_SET_TITLE_2 = "to";
Blockly.Msg.UNITY_PHYSICS_VELOCITY_TITLE = "velocity (unit/s) of";
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS2D_TITLE = "° (2D)";
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS_TITLE_1 = "° around ";
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS_TITLE_2 = " (3D)";
Blockly.Msg.UNITY_QUATERNION_APPLY_VECTOR_TITLE = " rotated by ";
Blockly.Msg.UNITY_QUATERNION_COMBINE_TITLE_1 = "combine rotations: rotate first ";
Blockly.Msg.UNITY_QUATERNION_COMBINE_TITLE_2 = " and then ";
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_2D_TITLE_1 = "2D direction (0°-360°) of ";
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_1 = "difference between rotation ";
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_2 = " and ";
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_3 = " in degrees";
Blockly.Msg.UNITY_QUATERNION_GET_ROTATION_TITLE = "rotation of ";
Blockly.Msg.UNITY_QUATERNION_IDENTITY_TITLE = "not rotated";
Blockly.Msg.UNITY_QUATERNION_INVERSE_TITLE = "inverse rotation of ";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_XAXIS_NEG = "negative side of my x-axis";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_XAXIS_POS = "positive side of my x-axis";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_YAXIS_NEG = "negative side of my y-axis";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_YAXIS_POS = "positive side of my y-axis";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_1 = "rotation where the ";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_2 = " points towards ";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_3 = " from ";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_4 = " (2D)";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_1 = "rotation around axis ";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_2 = " where my ";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_3 = " points towards ";
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_4 = " from ";
Blockly.Msg.UNITY_QUATERNION_ROTATE_TITLE_1 = "change rotation of ";
Blockly.Msg.UNITY_QUATERNION_ROTATE_TITLE_2 = "with";
Blockly.Msg.UNITY_QUATERNION_SET_ROTATION_TITLE_1 = "set rotation of ";
Blockly.Msg.UNITY_QUATERNION_SET_ROTATION_TITLE_2 = " on ";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_DIST = "the distance";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_DIST_DEFNAME = "distance";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_NORMAL = "the normal vector where the laser hit";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_NORMAL_DEFNAME = "normal";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_OBJ = "the object that got hit";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_OBJ_DEFNAME = "hitObject";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_POINT = "the point where the laser hit";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_POINT_DEFNAME = "point";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_1 = "shoot a laser";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_2 = "from position";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_3 = "in direction";
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_4 = "when it hits do";
Blockly.Msg.UNITY_RENDER_SETSPRITE_TITLE_1 = "set appearance of";
Blockly.Msg.UNITY_RENDER_SETSPRITE_TITLE_2 = "to";
Blockly.Msg.UNITY_SCENE_GOTO_TITLE = "go to scene with name";
Blockly.Msg.UNITY_SCREEN_CAMERA_MAIN_TITLE = "the main camera object";
Blockly.Msg.UNITY_SCREEN_MOUSE_POSITION_TITLE = "pixel position of the mouse on the screen";
Blockly.Msg.UNITY_SCREEN_MOUSE_SCENE_POSITION_2D_TITLE = "position of the mouse in the scene with z=0 (2D)";
Blockly.Msg.UNITY_SCREEN_SCENE_TO_SCREEN_TITLE_1 = "pixel position on screen of coordinate";
Blockly.Msg.UNITY_SCREEN_SCENE_TO_SCREEN_TITLE_2 = "for camera of";
Blockly.Msg.UNITY_SCREEN_SCREEN_SIZE_TITLE = "size of screen in pixels";
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_DIR_TITLE_1 = "look direction in scene of pixel position";
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_DIR_TITLE_2 = "for camera of";
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_1 = "coordinate in scene of pixel position";
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_2 = "for camera of";
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_3 = "on the plane with normal";
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_4 = "containing point";
Blockly.Msg.UNITY_THIS = "myself";
Blockly.Msg.UNITY_TIME_DELTA_TITLE = "delta time";
Blockly.Msg.UNITY_TIME_LEVELLOAD_TITLE = "time since start of the scene";
Blockly.Msg.UNITY_TIME_LOOP_TITLE = "time since start of repeat";
Blockly.Msg.UNITY_TIME_REPEAT_TILL_TITLE = "repeat each frame 🕑 while ";
Blockly.Msg.UNITY_TIME_REPEAT_TITLE = "repeat each frame 🕑";
Blockly.Msg.UNITY_TIME_WAITFRAME_TITLE = "wait till next frame 🕑";
Blockly.Msg.UNITY_TIME_WAITTIME_TITLE_1 = "wait";
Blockly.Msg.UNITY_TIME_WAITTIME_TITLE_2 = "second(s) 🕑";
Blockly.Msg.UNITY_TRANSFORM_JUMPTO_TITLE_1 = "jump";
Blockly.Msg.UNITY_TRANSFORM_JUMPTO_TITLE_2 = "to";
Blockly.Msg.UNITY_TRANSFORM_MOVE_TITLE_1 = "jump";
Blockly.Msg.UNITY_TRANSFORM_MOVE_TITLE_2 = "additionally with";
Blockly.Msg.UNITY_TRANSFORM_POSITION_TITLE = "position of";
Blockly.Msg.UNITY_UI_SET_TEXT_TITLE_1 = "set UI text of";
Blockly.Msg.UNITY_UI_SET_TEXT_TITLE_2 = "on";
Blockly.Msg.UNITY_VECTOR_CREATE_X_TITLE = "x";
Blockly.Msg.UNITY_VECTOR_CREATE_Y_TITLE = "y";
Blockly.Msg.UNITY_VECTOR_CREATE_Z_TITLE = "z";
Blockly.Msg.UNITY_VECTOR_FETCH_TITLE_1 = "of";
Blockly.Msg.UNITY_VECTOR_FETCH_X_TITLE = "x of";
Blockly.Msg.UNITY_VECTOR_FETCH_Y_TITLE = "y of";
Blockly.Msg.UNITY_VECTOR_FETCH_Z_TITLE = "z of";
Blockly.Msg.UNITY_VECTOR_LENGTH_TITLE = "length of";
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_ADD = "Gives the element wise sum of two vectors.";
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_MINUS = "Gives the element wise subtraction of two vectors.";
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_MULTIPLY = "Gives the element wise multiplication of two vectors.";
Blockly.Msg.UNITY_VECTOR_MULTIPLY_TITLE = "times";
Blockly.Msg.UNITY_VECTOR_PICK_OPT_BACK = "backward (depth) (0, 0, -1)";
Blockly.Msg.UNITY_VECTOR_PICK_OPT_DOWN = "down (0, -1, 0)";
Blockly.Msg.UNITY_VECTOR_PICK_OPT_FORWARD = "forward (depth) (0, 0, 1)";
Blockly.Msg.UNITY_VECTOR_PICK_OPT_LEFT = "left (-1, 0, 0)";
Blockly.Msg.UNITY_VECTOR_PICK_OPT_ONE = "one (1, 1, 1)";
Blockly.Msg.UNITY_VECTOR_PICK_OPT_RIGHT = "right (1, 0, 0)";
Blockly.Msg.UNITY_VECTOR_PICK_OPT_UP = "up (0, 1, 0)";
Blockly.Msg.UNITY_VECTOR_PICK_OPT_ZERO = "zero (0, 0, 0)";
Blockly.Msg.UNITY_VECTOR_PRODUCT_OPTION_CROSS = "cross";
Blockly.Msg.UNITY_VECTOR_PRODUCT_OPTION_DOT = "dot";
Blockly.Msg.UNITY_VECTOR_PRODUCT_TITLE_1 = "product of";
Blockly.Msg.UNITY_VECTOR_PRODUCT_TITLE_2 = "and";
Blockly.Msg.UNITY_VECTOR_TOSIZE_TITLE = "scaled to length";
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_1 = "position local to";
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_2 = "of position";
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_3 = "in the world";
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOWORLD_TITLE_1 = "position in the world of position";
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOWORLD_TITLE_2 = "local to";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";
Blockly.Msg.VARIABLES_SET = "set %1 to %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "List Boolean";
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "List Colour";
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "List Connection";
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "List Number";
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "List String";
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Boolean";
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Colour";
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Connection";
Blockly.Msg.VARIABLES_TYPE_GAMEOBJECT = "GameObject";
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Number";
Blockly.Msg.VARIABLES_TYPE_QUATERNION = "Rotation";
Blockly.Msg.VARIABLES_TYPE_SPRITE = "Sprite";
Blockly.Msg.VARIABLES_TYPE_STRING = "String";
Blockly.Msg.VARIABLES_TYPE_VECTOR3 = "Vector3";
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;